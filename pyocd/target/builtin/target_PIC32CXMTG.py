# pyOCD debugger
# Copyright (c) 2020 Arm Limited
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from ...flash.flash import Flash
from ...coresight.coresight_target import CoreSightTarget
from ...core.memory_map import (FlashRegion, RamRegion, MemoryMap)

FLASH_ALGO = {
    'load_address' : 0x20000000,

    # Flash algorithm as a hex string
    'instructions': [
    0xE00ABE00, 0x062D780D, 0x24084068, 0xD3000040, 0x1E644058, 0x1C49D1FA, 0x2A001E52, 0x4770D1F2,
    0xbf042800, 0x47702001, 0x60012100, 0x60816041, 0x490b60c1, 0x604a4a09, 0x7280f04f, 0x60036813,
    0x60436853, 0x60836893, 0x60c268d2, 0x60484805, 0xf0106888, 0xd0fb0f01, 0x47702000, 0x5a00000e,
    0x460e0000, 0x5a00000f, 0xf0416801, 0x60010101, 0x68014770, 0x0101f021, 0x47706001, 0xf44f6802,
    0xf4226370, 0xea036270, 0x43112101, 0x47706001, 0x47706880, 0x477068c0, 0xf1b1b510, 0xd3027f80,
    0x7f90f1b1, 0xf3afd901, 0x28008000, 0xf8dfbf1c, 0xf8c0c094, 0xf1a1c000, 0x2a007080, 0x0a41bf1c,
    0x2b008011, 0xf3c0bf1c, 0x80180008, 0xb510bd10, 0xf5b1b128, 0xbf985f80, 0x7f00f5b2, 0xf3afd301,
    0xeb028000, 0xf1002041, 0x2b007080, 0x6018bf18, 0xb2c9bd10, 0x4604b510, 0x407ff06f, 0x2002ea00,
    0x2b004308, 0xf040bf04, 0x606040b4, 0xf04fd012, 0x688a7100, 0x4449490c, 0xf1a4600a, 0xf5b1418c,
    0xd1032160, 0x41b4f040, 0x47902000, 0xf00068a0, 0xbd10000e, 0xf01068a0, 0xd0fb0f01, 0x000ef000,
    0x0000bd10, 0x460e0000, 0x00000004, 0x460cb510, 0xf7ff48fe, 0x48feff8e, 0x60044448, 0xb500bd10,
    0x4601b083, 0xaa01ab02, 0xf7ff4668, 0x48f8ff95, 0x44482200, 0x68032105, 0xf7ff9800, 0xb003ffba,
    0xb500bd00, 0x4601b083, 0xaa01ab02, 0xf7ff4668, 0x48efff83, 0x2004f8bd, 0x21114448, 0x98006803,
    0xffa7f7ff, 0xbd00b003, 0x4df0e92d, 0xb0844fe9, 0x000e4614, 0xd006444f, 0x7f80f1b0, 0x1901d303,
    0x7f90f1b1, 0xf3afd901, 0x46018000, 0xaa02ab01, 0xf7ffa803, 0x2c00ff61, 0xf8dfbf1f, 0x44c88378,
    0xa36cf8df, 0xd04f44ca, 0x0004f8bd, 0x7500f5c0, 0xbf2842a5, 0x466b4625, 0xf8bd2200, 0x98031008,
    0xff65f7ff, 0xf8bd9800, 0xf0402004, 0xf5c24120, 0x1b407000, 0xfb80fa1f, 0x46389100, 0xf9fef000,
    0x0004f8bd, 0x4438462a, 0xf0004631, 0xf8bdf9f7, 0x99000004, 0x4401465a, 0x44294438, 0xf0004428,
    0x9900f9ed, 0xf8582000, 0x1c402020, 0x2b04f841, 0xd3f82880, 0x2008f8bd, 0xf8da2101, 0x98033000,
    0xff47f7ff, 0xbf1c2800, 0xe8bdb004, 0x442e8df0, 0x0008f8bd, 0xf1001b64, 0xf8ad0001, 0xf04f0008,
    0xf8ad0000, 0xd1af0004, 0x2000b004, 0x8df0e8bd, 0xb086b570, 0x4616461c, 0xab032510, 0xf000aa02,
    0x2e00f933, 0x9802bf1c, 0x2c006030, 0x9803bf1c, 0x23006020, 0xa804466a, 0xf7ff9902, 0x2300feed,
    0x4618aa01, 0xf7ff9903, 0xf8bdfee7, 0xf8bd0000, 0x42881004, 0x4c9ebf3c, 0xd213444c, 0x2108b282,
    0x98046823, 0xff05f7ff, 0xbf1c2800, 0xbd70b006, 0x0000f8bd, 0x1004f8bd, 0xb2804428, 0x0000f8ad,
    0xd3eb4288, 0x2000b006, 0xb570bd70, 0x461cb086, 0x25104616, 0xaa02ab03, 0xf8f6f000, 0xbf1c2e00,
    0x60309802, 0xbf1c2c00, 0x60209803, 0x466a2300, 0x9902a804, 0xfeb0f7ff, 0xaa012300, 0x99034618,
    0xfeaaf7ff, 0x0000f8bd, 0x1004f8bd, 0xbf3c4288, 0x444c4c7f, 0xb282d213, 0x68232109, 0xf7ff9804,
    0x2800fec8, 0xb006bf1c, 0xf8bdbd70, 0xf8bd0000, 0x44281004, 0xf8adb280, 0x42880000, 0xb006d3eb,
    0xbd702000, 0x41f0e92d, 0xb08c2700, 0x4281460c, 0xf1b0bf28, 0xd3027f80, 0x7f90f1b4, 0xf3afd901,
    0x46018000, 0xaa092300, 0xf7ffa808, 0x2300fe75, 0x4621aa0a, 0xf7ff4618, 0xf8bdfe6f, 0x20101024,
    0xf1f0fbb1, 0xf8bdb2cc, 0xfbb11028, 0xb2d6f2f0, 0xf2f0fbb1, 0x1012fb00, 0xbf1c2800, 0xb2c61c70,
    0x2200485b, 0x210a4448, 0x98086803, 0xfe81f7ff, 0x46e82500, 0xf7ff9808, 0xf848fe4d, 0x1c6d0025,
    0xd3f72d08, 0xbf3842b4, 0xd20d2201, 0xf0040961, 0xf858001f, 0xfa021021, 0x4201f000, 0x1c7fbf18,
    0xb2c41c60, 0xd3f142b4, 0x4638b00c, 0x81f0e8bd, 0x4604b570, 0xd3012809, 0x8000f3af, 0x4d434844,
    0x22004448, 0x210d6803, 0xf7ff4628, 0x4628fe52, 0xfe20f7ff, 0x40a12101, 0xbf184008, 0xbd702001,
    0xb5702809, 0xd3014604, 0x8000f3af, 0x4e374d38, 0x2200444d, 0x4630210d, 0xf7ff682b, 0x4630fe3a,
    0xfe08f7ff, 0x40a12101, 0xbf1c4201, 0xbd702000, 0x46304622, 0xe8bd682b, 0x210b4070, 0xbe29f7ff,
    0x4604b570, 0xd3012809, 0x8000f3af, 0x4e274d28, 0x2200444d, 0x4630210d, 0xf7ff682b, 0x4630fe1a,
    0xfde8f7ff, 0x40a12101, 0xbf084008, 0x4622bd70, 0x682b4630, 0x4070e8bd, 0xf7ff210c, 0x4a1bbe0a,
    0xf0116891, 0xd0fb0f01, 0x41b4f04f, 0x68916051, 0x0f01f011, 0x2100d0fb, 0xf84068d3, 0x1c493021,
    0xd3f92904, 0x47702000, 0xb084b570, 0x461e460c, 0x46014615, 0xaa022300, 0xf7ff4668, 0x2300fdbd,
    0x4621aa03, 0xf7ffa801, 0xf8bdfdb7, 0x20101008, 0xf2f0fbb1, 0x1212fb00, 0xf8bd1a89, 0xb289400c,
    0xf2f0fbb4, 0x4212fb00, 0xe005b172, 0x460e0000, 0x00000008, 0x00000010, 0xf2f0fbb4, 0x4012fb00,
    0x0010f1c0, 0xb2844420, 0x2200462b, 0xf7ff9800, 0x4633fdae, 0x46212200, 0xf7ff9801, 0xb004fda8,
    0x0000bd70, 0x4604b510, 0x46082100, 0xfddef7ff, 0xf7ff2005, 0x2006ff65, 0xff62f7ff, 0xbf1c2800,
    0xbd102001, 0x4448481b, 0x20006004, 0x2000bd10, 0x48184770, 0x68004448, 0xbdd1f7ff, 0x4604b510,
    0xf0204915, 0x2300407e, 0x461a4401, 0xfe9df7ff, 0x4620b928, 0xfdd5f7ff, 0xbf082800, 0x2001bd10,
    0x4613bd10, 0x460ab510, 0x407ef020, 0xf7ff4619, 0x2800fddb, 0x2001bf18, 0x4613bd10, 0x460db570,
    0x4604460a, 0xf0004619, 0x2800f81b, 0x1960bf0c, 0xbd704620, 0x0000000c, 0x0001ffff, 0x0301ea40,
    0xd003079b, 0xc908e009, 0xc0081f12, 0xd2fa2a04, 0xf811e003, 0xf8003b01, 0x1e523b01, 0x4770d2f9,
    0x4604b530, 0x46032000, 0x1c5be000, 0xd2034293, 0x5ccd5ce0, 0xd0f81b40, 0x0000bd30, 0x00000000,
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x20000585,
    'pc_unInit': 0x200005af,
    'pc_program_page': 0x200005e3,
    'pc_erase_sector': 0x200005bd,
    'pc_eraseAll': 0x200005b3,

    'static_base' : 0x20000000 + 0x00000020 + 0x0000063c,
    'begin_stack' : 0x20000900,
    'begin_data' : 0x20000000 + 0x1000,
    'page_size' : 0x200,
    'analyzer_supported' : True,
    'analyzer_address' : 0x20002000,
    'page_buffers' : [0x20001000, 0x20001200],   # Enable double buffering
    'min_program_length' : 0x200,

    # Flash information
    'flash_start': 0x1000000,
    'flash_size': 0x200000,
    'sector_sizes': (
        (0x0, 0x20000),
        (0x20000, 0x20000),
        (0x40000, 0x20000),
        (0x60000, 0x20000),
        (0x80000, 0x20000),
        (0xa0000, 0x20000),
        (0xc0000, 0x20000),
        (0xe0000, 0x20000),
        (0x100000, 0x20000),
        (0x120000, 0x20000),
        (0x140000, 0x20000),
        (0x160000, 0x20000),
        (0x180000, 0x20000),
        (0x1a0000, 0x20000),
        (0x1c0000, 0x20000),
        (0x1e0000, 0x20000),
    )
}


class PIC32CXMTG(CoreSightTarget):

    VENDOR = "Microchip"
    
    MEMORY_MAP = MemoryMap(
        FlashRegion(    start=0x01000000,           length=0x200000,      blocksize=0x1000, is_boot_memory=True,
            algo=FLASH_ALGO),
        RamRegion(      start=0x20000000,  length=0x80000)
        )

    def __init__(self, session):
        super(PIC32CXMTG, self).__init__(session, self.MEMORY_MAP)
